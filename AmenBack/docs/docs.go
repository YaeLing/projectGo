// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/profile/{key}/{value}": {
            "get": {
                "description": "Admin query user profiles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Admin query user profiles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Query key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query value",
                        "name": "value",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Query user profile failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/role": {
            "put": {
                "description": "Admin update user role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Admin update user role",
                "parameters": [
                    {
                        "description": "User role",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiModel.RequestUpdateUserRole"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Update user role failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/{id}": {
            "get": {
                "description": "Generate JWT Token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authenticate"
                ],
                "summary": "Generate JWT Token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token string",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/profile/{userID}": {
            "delete": {
                "description": "Admin delete user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Admin delete user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Delete user profile failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user": {
            "delete": {
                "description": "Delete user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Delete user self profile failed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/account": {
            "get": {
                "description": "Query user self account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Query self account",
                "responses": {
                    "200": {
                        "description": "User account",
                        "schema": {
                            "$ref": "#/definitions/apiModel.ResponseUserAccount"
                        }
                    },
                    "404": {
                        "description": "User account not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update user self account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update user self account",
                "parameters": [
                    {
                        "description": "User account",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiModel.RequestUpdateUserAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Update user self account failed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/info": {
            "put": {
                "description": "Update user self information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update user self info",
                "parameters": [
                    {
                        "description": "User info",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiModel.RequestUpdateUserInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Update user self information failed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/info/{key}/{value}": {
            "get": {
                "description": "Query user informations by key",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Query user info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Query key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query value",
                        "name": "value",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User informations",
                        "schema": {
                            "$ref": "#/definitions/apiModel.ResponseUserInfos"
                        }
                    },
                    "404": {
                        "description": "User informations not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "Register user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "User info",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiModel.RequestRegisterUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Register failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apiModel.RequestRegisterUser": {
            "description": "User register information with acoount and user info",
            "type": "object",
            "properties": {
                "account": {
                    "description": "this is account",
                    "type": "string"
                },
                "name": {
                    "description": "this is user name",
                    "type": "string"
                },
                "password": {
                    "description": "this is user password",
                    "type": "string"
                },
                "phone": {
                    "description": "this is user phone",
                    "type": "string"
                }
            }
        },
        "apiModel.RequestUpdateUserAccount": {
            "description": "Update user account",
            "type": "object",
            "properties": {
                "account": {
                    "description": "this is account",
                    "type": "string"
                },
                "password": {
                    "description": "this is user password",
                    "type": "string"
                }
            }
        },
        "apiModel.RequestUpdateUserInfo": {
            "description": "Update user information",
            "type": "object",
            "properties": {
                "name": {
                    "description": "this is user name",
                    "type": "string"
                },
                "phone": {
                    "description": "this is user phone",
                    "type": "string"
                }
            }
        },
        "apiModel.RequestUpdateUserRole": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "apiModel.ResponseUserAccount": {
            "description": "Response of user account",
            "type": "object",
            "properties": {
                "account": {
                    "description": "this is account",
                    "type": "string"
                },
                "password": {
                    "description": "this is user password",
                    "type": "string"
                },
                "role": {
                    "description": "this is user role",
                    "type": "string"
                }
            }
        },
        "apiModel.ResponseUserInfo": {
            "description": "Response of user information",
            "type": "object",
            "properties": {
                "name": {
                    "description": "this is user name",
                    "type": "string"
                },
                "phone": {
                    "description": "this is user phone",
                    "type": "string"
                }
            }
        },
        "apiModel.ResponseUserInfos": {
            "description": "Response of multiple user informations",
            "type": "object",
            "properties": {
                "userInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apiModel.ResponseUserInfo"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
